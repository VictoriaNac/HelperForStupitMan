Часть 1. Связывание репозиториев

Сценарий 1. Есть локальный репозиторий, но нет удалённого:

    Создайте пустой удалённый репозиторий через интерфейс интересующего веб-хостинга репозиториев (GitHub, GitLab).
    В терминале перейдите к папке локального репозитория.
    Создаем папку,в ней пишем git init. создаем файли и папки. git add . потом git commit -m "something"
    Добавьте ссылку на удалённый репозиторий: git remote add origin “ссылка на репозиторий”.
    Опубликуйте локальный репозиторий на сервере в первый раз: git push -u origin master.
    Если создаем go репозиторий,то не забываем про "go mod init test"

Сценарий 2. Есть удалённый репозиторий, но нет локального:

    Зайдите на страницу удалённого репозитория и найдите ссылку для клонирования. Скопируйте её.
    В терминале выполните git clone “ссылка”.
    Проверьте, что репозиторий скопировался по пути, где был открыт терминал.

Сценарий 3. Нет ни локального, ни удалённого репозиториев:

    Создайте пустой удалённый репозиторий через интерфейс интересующего веб-хостинга репозиториев (GitHub, GitLab).
    Либо переходите ко второму пункту первого сценария, либо добавьте файлы на сервер снова, пользуясь интерфейсом веб-хостинга, 
    а затем выполните шаги из второго сценария.



git diff просмотр всех изменений незакомиченных
git restore имя файла - отменить изменения до сохранения(еще не закомичен)
git restore --staged имя файла- отменить сохраненные изменения(еще не закомичен)

git reset --hard удаляет все изменения во всех файлах в том числе уже сохраненных(еще не закомичен)
git reset --merge номер коммита до которого срезаем слияние веток
git merge --abort отмена слияния веток с конфликтом

git branch -m новое имя ветки - переименование текущей ветки
git branch -d имя ветки -удаление ветки полностью

git checkout имя коммита(номер)  имя файла - удаляем закомиченные изменения в файле
git revert --no-commit номер коммита - удаляет конкретный коммит  