	// 1.все о функциях в GO

package fun 

import(
	"fmt"
)




func NameFunc(a int, b string) {   // NameFunc(входные параметры/аргументы функции) - сначала название,а потом тип
	fmt.Println(a,b)                           //тело функции - тут пишим любой код,который будет выполняться при вызове данной функии
    //a = 2    как пример
	//b = "bit" как пример
}
func main(){

  NameFunc(1986,"birth")  //вызов функции - просто пишем NameFunc(параметры/аргументы функции; вводим их )
}	
 




//==================================================================================================================
    //2. Обнуление входных значений переменных

	func Obnulenie(c int) {   //обявили функцию; написали переменную и ее тип
    c = 0                     // объявили значение переменной
	}

	func main(){
		d := 10               //создание новой переменной и присваивание ей значение
		Obnulenie(d)          // при вызове функции Obnulenie с значением переменной d выдаст "10",а не "0"
		fmt.Println(d)  
	}

//как это обойти:

 	func Obnulenie2(c *int) {   //обявили функцию,на вход она получит переменную с указателем "*"
		*c = 0                    
		}
	
		func main(){
			d := 10               
			Obnulenie2(&d)          // при вызове функции Obnulenie2 с значением переменной d выдаст "0"
			fmt.Println(d)  
		}

