package main

import(
	"fmt"
)

func main () {
	
}
//1==============================================================================================================

/*
Каждая рабочая область Go имеет три основные папки:

    bin: содержит исполняемые файлы приложений;
    src: содержит весь исходный код приложений, имеющийся на рабочей станции;
    pkg: содержит скомпилированные версии доступных библиотек. Компилятор может 
	выполнять компоновку с этими библиотеками без их повторной компиляции.

*/


//2==============================================================================================================

/* 
В Go есть четыре категории типов данных:

    базовые типы — числа, строки и логические значения;
    агрегатные типы — массивы и структуры;
    ссылочные типы — указатели, срезы, карты, функции и каналы;
    интерфейсные типы — интерфейсы.
*/

//3==============================================================================================================

/*
!- отрицание
:= создание новой переменной и присваивание ей значение
= обьявление переменной 
== приравнивание
const - переменной присваивается неизменное значение
*/

//4==============================================================================================================

/*
объявление переменной:
var firstName, lastName string     через запятую с указанием типа
var age int                        либо так
var (                              или так
    firstName, lastName string
    age int
)
  
инициализация/присваивание переменной значения:
var (
    firstName string = "John"
    lastName  string = "Doe"
    age       int    = 32
)
                  или так:
var (
    firstName = "John"
    lastName  = "Doe"
    age       = 32
)

package main
import "fmt"
func main() {
    firstName, lastName := "John", "Doe"
    age := 32
    fmt.Println(firstName, lastName, age)

Обратите внимание, что здесь сразу после определения имени переменной необходимо указать двоеточие со знаком равенства (:=) и его соответствующее значение. При использовании двоеточия со знаком равенства объявляемая переменная должна быть новой. Если используется двоеточие со знаком равенства и переменная уже объявлена, скомпилировать программу не удастся.
Наконец, двоеточие со знаком равенства можно использовать только внутри функции. При объявлении переменных вне функции необходимо использовать ключевое слово var.
Для объявления констант нельзя использовать знак равенства двоеточия.
*/

//5==============================================================================================================

/*
Строки:

var firstName string = "John"
lastName := "Doe"
fmt.Println(firstName, lastName)

Иногда требуется экранировать символы. Чтобы сделать это в Go, добавьте перед символом обратную косую черту (\). 
Ниже приведены наиболее распространенные примеры использования escape-символов.

    \n для новых строк
    \r для возвратов каретки
    \t для вкладок
    \' для одинарных кавычек
    \" для двойных кавычек
    \\ для обратных косых черт
*/


//6==============================================================================================================

Функция len — это встроенная функция Go, используемая для получения числа элементов в массиве, срезе или карте.